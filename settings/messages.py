from emoji import emojize

def info_message(version, author, reports=None):
    message = f"<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –±–æ—Ç—É Checkita!</b>\n\n" \
              f"–î–∞–Ω–Ω—ã–π –±–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö" \
              f"–æ—Ç—á–µ—Ç–æ–≤ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ, —à—Ç—Ä–∞—Ñ–∞—Ö, –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–µ –¢–°\n\n" \
              f"<b>–£—Å–ª—É–≥–∏:</b>\n\n" \
              f"- –û—Ç—á–µ—Ç –ø–æ –∞–≤—Ç–æ - –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ \n" \
              f"- –û—Ü–µ–Ω–∫–∞ –∞–≤—Ç–æ, –®—Ç—Ä–∞—Ñ—ã, –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ –Ω–æ–º–µ—Ä—É, –§–°–°–ü - 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ –¥–µ–Ω—å <b>–ë–ï–°–ü–õ–ê–¢–ù–û</b>," \
              f" –¥–∞–ª–µ–µ - –¥–æ—Å—Ç—É–ø –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ \n\n" \
              f"<b>–¢–∞—Ä–∏—Ñ—ã –ø–æ–¥–ø–∏—Å–∫–∏:</b>\n\n" \
              f"1 –æ—Ç—á–µ—Ç - 70 —Ä—É–±. \n" \
              f"2 –æ—Ç—á–µ—Ç–∞ - 120 —Ä—É–±. \n" \
              f"5 –æ—Ç—á–µ—Ç–æ–≤ - 180 —Ä—É–±. \n\n" \
              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ - <b>{reports} —à—Ç.</b> \n\n" \
              f"-<b>–í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã: - </b><i>{version}</i>\n" \
              f"-<b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: - </b><i>{author}</i>"
    return message


# –†–µ–Ω–¥–µ—Ä –æ—Ç—á–µ—Ç–∞ –ø–æ –∞–≤—Ç–æ

def car_report_message(data):
    try:
        vehicle = data['gibdd']['vehicle']
        message_car = f"<b>üìã {vehicle['model'].replace('–ë–ï–ó –ú–û–î–ï–õ–ò ', '')} {data['report_id']} </b>\n\n"
        if 'count' in data["restrict"]:
            print('restrict true')
            if data["restrict"]["count"] == 0:
                message_car += f"‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n"
            else:
                message_car += f"‚ùå –ù–∞–π–¥–µ–Ω—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è\n"
        else:
            print('restrict false')
        message_car += f"üö∂ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –≤ –ü–¢–°: {len(data['gibdd']['ownershipPeriod'])}\n"
        if 'count' in data["wanted"]:
            print('wanted true')
            if data["wanted"]["count"] == 0:
                message_car += f"‚úÖ –ù–µ—Ç —Å–≤–µ–¥–µ–Ω–∏–π –æ —Ä–æ–∑—ã—Å–∫–µ\n"
            else:
                message_car += f"‚ùå –ù–∞–π–¥–µ–Ω—ã —Å–≤–µ–¥–µ–Ω–∏—è –æ —Ä–æ–∑—ã—Å–∫–µ\n"
        else:
            print('wanted false')
        if 'count' in data["osago"]:
            if data["osago"]["count"] == 0:
                message_car += f"‚ùå –ü–æ–ª–∏—Å –û–°–ê–ì–û –Ω–µ –Ω–∞–π–¥–µ–Ω\n"
            else:
                message_car += f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª–∏—Å –û–°–ê–ì–û\n"
                message_car += f"‚úÖ –ì–æ—Å–Ω–æ–º–µ—Ä: {data['osago']['rez'][0]['regnum']}\n"
        if 'num' in data["notary"]:
            print('notary true')
            if data["notary"]["num"] == 0:
                message_car += f"‚úÖ –ù–µ –≤ –∑–∞–ª–æ–≥–µ\n"
            else:
                message_car += f"‚ùå –ù–∞–π–¥–µ–Ω—ã —Å–≤–µ–¥–µ–Ω–∏—è –æ –∑–∞–ª–æ–≥–µ\n"
        else:
            print('notary false')
        if 'count' in data["company"]:
            print('company true')
            if data["company"]["count"] == 0:
                message_car += f"‚úÖ –û—Ç–∑—ã–≤–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n"
            else:
                message_car += f"‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—Ç–∑—ã–≤–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏\n"
        else:
            print('company false')
        if 'count' in data["dtp"]:
            if data["dtp"]["count"] == 0:
                message_car += f"‚úÖ –î–¢–ü –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n"
            else:
                message_car += f"‚ùå –ê–≤—Ç–æ –±—ã–ª –≤ –î–¢–ü\n"
        if len(data["taxi"]["records"]) == 0:
            message_car += f"‚úÖ –ù–µ—Ç —Å–≤–µ–¥–µ–Ω–∏–π –æ —Ä–∞–±–æ—Ç–µ –≤ —Ç–∞–∫—Å–∏\n\n"
        else:
            message_car += f"üöï –ê–≤—Ç–æ —Ä–∞–±–æ—Ç–∞–ª –≤ —Ç–∞–∫—Å–∏\n\n"
        message_car += f"‚¨á –°–∫–∞—á–∞–π—Ç–µ –æ—Ç—á–µ—Ç –≤ PDF ‚¨á\n\n"

        message = message_car
        return message
    except KeyError:
        return '–ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ API. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'


# –†–µ–Ω–¥–µ—Ä –æ—Ç—á–µ—Ç–∞ –ø–æ —à—Ç—Ä–∞—Ñ–∞–º

def fines_message(data):
    try:
        message = f"<b>–ù–∞–π–¥–µ–Ω–æ —à—Ç—Ä–∞—Ñ–æ–≤ - {data['num']}. –ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>\n\n"

        i_fine = 1
        fines_list = data['rez']
        while i_fine <= len(fines_list):
            cur_fine = fines_list[i_fine - 1]
            message += f"<i>–ù–æ–º–µ—Ä —à—Ç—Ä–∞—Ñ–∞ - {cur_fine['numfines']}</i>\n" \
                       f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:  </b><i>{cur_fine['KoAPtext']}</i>\n" \
                       f"<b>–°—Ç–∞—Ç—å—è:  </b><i>{cur_fine['KoAPcode']}</i>\n" \
                       f"<b>–°—É–º–º–∞:  </b><i>{cur_fine['Summa']}</i>\n" \
                       f"<b>–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ:  </b><i>{cur_fine['NumPost']}</i>\n" \
                       f"<b>–î–∞—Ç–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:  </b><i>{cur_fine['DatePost']}</i>\n\n"

            i_fine += 1

        return message
    except KeyError:
        return '–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'


# –†–µ–Ω–¥–µ—Ä –æ—Ç—á–µ—Ç–∞ –ø–æ —Ñ—Å—Å–ø

def fssp_message(data):
    try:
        message = f"<b>–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π - {data['countAll']}</b>. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: \n\n"

        i_deb = 1
        debtors_list = data['records']
        while i_deb <= len(debtors_list):
            cur_deb = debtors_list[i_deb - 1]
            cur_message = f"<i>–ù–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏ - {i_deb}</i>\n" \
                          f"<b>–î–æ–ª–∂–Ω–∏–∫:  </b><i>{cur_deb['debtor_name']}</i>\n" \
                          f"<b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:  </b><i>{cur_deb['debtor_dob']}</i>\n" \
                          f"<b>–ù–æ–º–µ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞:  </b><i>{cur_deb['process_title']}</i>\n"
            # f"<b>–ù.–ü.:  </b><i>{cur_deb['debtor_address']}</i>\n" \
            # f"<b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç:  </b><i>{cur_deb['recIspDoc']}</i>\n" \
            # f"<b>–¢–∏–ø:  </b><i>{cur_deb['subject']}</i>\n" \
            # f"<b>–û—Ä–≥–∞–Ω:  </b><i>{cur_deb['document_organization']}</i>\n" \
            # f"<b>–û—Ñ–∏—Ü–µ—Ä:  </b><i>{cur_deb['officer_name']}</i>\n" \
            # f"<b>–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:  </b><i>{cur_deb['officer_phones']}</i>\n"
            message += cur_message
            i_deb += 1

        return message
    except KeyError:
        return '–ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ API. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'


def cash_message(data):
    try:
        message = f"<b>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å - {data['balance']} —Ä—É–±.</b>."
        return message
    except KeyError:
        return '–ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ API. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'


def operations_message(data):
    try:
        message = f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: </b><i>{data['countPay']}</i>.\n" \
                  f"<b>–£—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: </b><i>{data['countPaytoApi']}</i>.\n" \
                  f"<b>–í–æ–∑–≤—Ä–∞—Ç—ã –∑–∞ –Ω–µ—É—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã: </b><i>{data['countBack']}</i>."
        return message
    except KeyError:
        return '–ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ API. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É'
